<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>Coordinate</title>
    <link rel="stylesheet" href="_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="_static/pygments.css" type="text/css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="module-flap.coordinate">
<span id="coordinate"></span><h1>Coordinate</h1>
<p>Created on Wed Jan 23 09:44:50 2019</p>
<p>&#64;author: Zoletnik</p>
<p>This is the coordinate description for FLAP</p>
<dl class="class">
<dt id="flap.coordinate.Coordinate">
<em class="property">class </em><code class="sig-prename descclassname">flap.coordinate.</code><code class="sig-name descname">Coordinate</code><span class="sig-paren">(</span><em class="sig-param">name=None</em>, <em class="sig-param">unit=None</em>, <em class="sig-param">mode=&lt;flap.coordinate.CoordinateMode object&gt;</em>, <em class="sig-param">shape=[]</em>, <em class="sig-param">start=None</em>, <em class="sig-param">step=None</em>, <em class="sig-param">c_range=None</em>, <em class="sig-param">values=None</em>, <em class="sig-param">value_index=None</em>, <em class="sig-param">value_ranges=None</em>, <em class="sig-param">dimension_list=[]</em><span class="sig-paren">)</span><a class="reference internal" href="_modules/flap/coordinate.xhtml#Coordinate"><span class="viewcode-link">[source]</span></a></dt>
<dd><p>Class for the description of a mapping of coordinate values from an n-dimensional coordinate
sample space to coordinates of an m-dimensional data matrix.
Coordinate sample space is a rectangular equidistant point matrix, with equal steps in each dimension.
For dimension i sample index is from 0…n-1 if shape[i] == n
The sample space in this coordinate description does not necessarily match the shape of
any sub-matrix of the data object. If the shape is different then interpolation is done assuming
the coordinate of the first(last) point of the coordinate matrix is the coordinate of the first(last)
data point.</p>
<p>Coordinate can be anything described by name and unit.
Standard coordinates: Time, Channel, Channel number, Device_x, Device_y, Device_z, Device_R, Device_Z, Device_phi,</p>
<blockquote>
<div><p>Flux_r, Flux_theta, Flux_phi, Frequency, Time lag</p>
</div></blockquote>
<p>See the description of variables in the __init__ function.
The ranges and start-step pair of inputs are alternatives.</p>
<dl class="method">
<dt id="flap.coordinate.Coordinate.change_dimensions">
<code class="sig-name descname">change_dimensions</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="reference internal" href="_modules/flap/coordinate.xhtml#Coordinate.change_dimensions"><span class="viewcode-link">[source]</span></a></dt>
<dd><p>Return the list of dimensions of the data array along which this coordinate
changes</p>
</dd></dl>

<dl class="method">
<dt id="flap.coordinate.Coordinate.data">
<code class="sig-name descname">data</code><span class="sig-paren">(</span><em class="sig-param">data_shape=None</em>, <em class="sig-param">index=None</em>, <em class="sig-param">options=None</em><span class="sig-paren">)</span><a class="reference internal" href="_modules/flap/coordinate.xhtml#Coordinate.data"><span class="viewcode-link">[source]</span></a></dt>
<dd><p>Returns the coordinates, low and high limits for a sub-array of the data array in a DataObject.</p>
<dl>
<dt>index:</dt><dd><p>list, tuple describing the elements in DataObject.data for which the coordinates are
required. The length of the array should be identical to the number of dimensions
of the data array. Elements can be a mixture of numbers, slice objects, lists, numpy arrays,
integer iterators and ellipses.
Examples for 3D array:</p>
<blockquote>
<div><p>(…,0,0) coordinates of the elements in the first row of the data array
(slice(2,5),2,…)</p>
</div></blockquote>
</dd>
<dt>data_shape:</dt><dd><p>The shape of the data array (without slicing) for which coordinates are requested.</p>
</dd>
<dt>options: Dictionary with options for processing:</dt><dd><dl class="simple">
<dt>‘Interpolation’: ‘Linear’ (default, for non-equidistant axis when values shape is</dt><dd><p>different from data shape)</p>
</dd>
<dt>‘Change only’: Return only the data for those dimensions where this coordinate changes.</dt><dd><p>E.g. if it changes only along one dimension the output array will have 1 element
in all other dimensions.</p>
</dd>
</dl>
</dd>
<dt>Return value:</dt><dd><p>values, value_range_low, value range_high
The low and high values are the absolute values not the difference from values</p>
</dd>
</dl>
</dd></dl>

<dl class="method">
<dt id="flap.coordinate.Coordinate.data_range">
<code class="sig-name descname">data_range</code><span class="sig-paren">(</span><em class="sig-param">data_shape=None</em><span class="sig-paren">)</span><a class="reference internal" href="_modules/flap/coordinate.xhtml#Coordinate.data_range"><span class="viewcode-link">[source]</span></a></dt>
<dd><p>Returns the data range and the data range with errors for the coordinate. Both are lists.</p>
</dd></dl>

<dl class="method">
<dt id="flap.coordinate.Coordinate.dtype">
<code class="sig-name descname">dtype</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="reference internal" href="_modules/flap/coordinate.xhtml#Coordinate.dtype"><span class="viewcode-link">[source]</span></a></dt>
<dd><p>Return the data type of the coordinate.
Returns standard Python types: str, int, float, complex, boolean, object</p>
</dd></dl>

<dl class="method">
<dt id="flap.coordinate.Coordinate.nochange_dimensions">
<code class="sig-name descname">nochange_dimensions</code><span class="sig-paren">(</span><em class="sig-param">data_shape</em><span class="sig-paren">)</span><a class="reference internal" href="_modules/flap/coordinate.xhtml#Coordinate.nochange_dimensions"><span class="viewcode-link">[source]</span></a></dt>
<dd><p>Return the list of dimensions of the data array along which this coordinate
changes</p>
</dd></dl>

<dl class="method">
<dt id="flap.coordinate.Coordinate.non_interpol">
<code class="sig-name descname">non_interpol</code><span class="sig-paren">(</span><em class="sig-param">data_shape</em><span class="sig-paren">)</span><a class="reference internal" href="_modules/flap/coordinate.xhtml#Coordinate.non_interpol"><span class="viewcode-link">[source]</span></a></dt>
<dd><p>Return True if the shape of the coordinate description
is the same as the sub-data-array for which it applies and self.value_index is None.
In this case there is no need for interpolation, just copy coordinate values</p>
<p>Applicable only for non-equidistant case.</p>
</dd></dl>

</dd></dl>

<dl class="class">
<dt id="flap.coordinate.CoordinateMode">
<em class="property">class </em><code class="sig-prename descclassname">flap.coordinate.</code><code class="sig-name descname">CoordinateMode</code><span class="sig-paren">(</span><em class="sig-param">equidistant=True</em>, <em class="sig-param">range_symmetric=True</em><span class="sig-paren">)</span><a class="reference internal" href="_modules/flap/coordinate.xhtml#CoordinateMode"><span class="viewcode-link">[source]</span></a></dt>
<dd><p>Class for storing mode flags of the coordinate description</p>
</dd></dl>

<dl class="class">
<dt id="flap.coordinate.Intervals">
<em class="property">class </em><code class="sig-prename descclassname">flap.coordinate.</code><code class="sig-name descname">Intervals</code><span class="sig-paren">(</span><em class="sig-param">start</em>, <em class="sig-param">stop</em>, <em class="sig-param">step=None</em>, <em class="sig-param">number=None</em><span class="sig-paren">)</span><a class="reference internal" href="_modules/flap/coordinate.xhtml#Intervals"><span class="viewcode-link">[source]</span></a></dt>
<dd><p>A class to describe a series of intervals.
Regular intevals are identical length ones repeating with a fixed step.
Irregulars are just a list of start-stop values.
For integer type values both the start and stop value is included.
The optional number gives the number of ranges for the regular intervals.</p>
<dl class="method">
<dt id="flap.coordinate.Intervals.interval_limits">
<code class="sig-name descname">interval_limits</code><span class="sig-paren">(</span><em class="sig-param">limits=None</em>, <em class="sig-param">partial_intervals=False</em><span class="sig-paren">)</span><a class="reference internal" href="_modules/flap/coordinate.xhtml#Intervals.interval_limits"><span class="viewcode-link">[source]</span></a></dt>
<dd><p>Return the range lower and upper limits as two numpy arrays.
Limit the ranges within argument limits. (limits[0] &lt; limits[1])
limits: 2 elements list with lower and upper limit</p>
<dl class="simple">
<dt>partial_intervals: Return also partial ranges which extend over limits.</dt><dd><p>Their size will be truncated.</p>
</dd>
</dl>
<p>Raises a ValueError if there are no intervals within  limit or other problem.</p>
</dd></dl>

<dl class="method">
<dt id="flap.coordinate.Intervals.interval_number">
<code class="sig-name descname">interval_number</code><span class="sig-paren">(</span><em class="sig-param">limits=None</em>, <em class="sig-param">partial_intervals=False</em><span class="sig-paren">)</span><a class="reference internal" href="_modules/flap/coordinate.xhtml#Intervals.interval_number"><span class="viewcode-link">[source]</span></a></dt>
<dd><p>Return the number of intervals and the index of the start interval.
Limit the ranges within argument limits.
limits: 2 elements list with lower and upper limit</p>
<p>partial_intervals: Take into account also partial ranges which extend over limits.</p>
<p>Raises a ValueError in case of problem.</p>
</dd></dl>

</dd></dl>

<dl class="class">
<dt id="flap.coordinate.Unit">
<em class="property">class </em><code class="sig-prename descclassname">flap.coordinate.</code><code class="sig-name descname">Unit</code><span class="sig-paren">(</span><em class="sig-param">name=''</em>, <em class="sig-param">unit=''</em><span class="sig-paren">)</span><a class="reference internal" href="_modules/flap/coordinate.xhtml#Unit"><span class="viewcode-link">[source]</span></a></dt>
<dd><p>Class for the unit of the data</p>
<dl class="method">
<dt id="flap.coordinate.Unit.title">
<code class="sig-name descname">title</code><span class="sig-paren">(</span><em class="sig-param">language='EN'</em>, <em class="sig-param">complex_txt=None</em>, <em class="sig-param">new_unit=None</em><span class="sig-paren">)</span><a class="reference internal" href="_modules/flap/coordinate.xhtml#Unit.title"><span class="viewcode-link">[source]</span></a></dt>
<dd><p>Returns a title string which will be used in plotting.
complex_txt: List of 2 numbers:</p>
<blockquote>
<div><p>[0,0]: Amplitude
[0,1]: Phase
[1,0]: Real
[1,1]: Imaginary</p>
</div></blockquote>
</dd></dl>

</dd></dl>

</div>


          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>