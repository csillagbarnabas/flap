<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Tools</title>
    <link rel="stylesheet" href="_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="_static/pygments.css" type="text/css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="module-flap.tools">
<span id="tools"></span><h1>Tools</h1>
<p>Created on Wed Jan 23 13:18:25 2019</p>
<p>&#64;author: Zoletnik</p>
<p>Tools for the FLAP module</p>
<dl class="py function">
<dt id="flap.tools.chlist">
<code class="sig-prename descclassname">flap.tools.</code><code class="sig-name descname">chlist</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">chlist</span><span class="o">=</span><span class="default_value">None</span></em>, <em class="sig-param"><span class="n">chrange</span><span class="o">=</span><span class="default_value">None</span></em>, <em class="sig-param"><span class="n">prefix</span><span class="o">=</span><span class="default_value">''</span></em>, <em class="sig-param"><span class="n">postfix</span><span class="o">=</span><span class="default_value">''</span></em><span class="sig-paren">)</span><a class="reference internal" href="_modules/flap/tools.xhtml#chlist"><span class="viewcode-link">[source]</span></a></dt>
<dd><p>Creates a channel (signal) list name from a prefix, postfix a channel list and a list of channel
ranges</p>
</dd></dl>

<dl class="py function">
<dt id="flap.tools.del_list_elements">
<code class="sig-prename descclassname">flap.tools.</code><code class="sig-name descname">del_list_elements</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">input_list</span></em>, <em class="sig-param"><span class="n">indices</span></em><span class="sig-paren">)</span><a class="reference internal" href="_modules/flap/tools.xhtml#del_list_elements"><span class="viewcode-link">[source]</span></a></dt>
<dd><p>delete elements from a list</p>
</dd></dl>

<dl class="py function">
<dt id="flap.tools.expand_matrix">
<code class="sig-prename descclassname">flap.tools.</code><code class="sig-name descname">expand_matrix</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">mx</span></em>, <em class="sig-param"><span class="n">new_shape</span></em>, <em class="sig-param"><span class="n">dim_list</span></em><span class="sig-paren">)</span><a class="reference internal" href="_modules/flap/tools.xhtml#expand_matrix"><span class="viewcode-link">[source]</span></a></dt>
<dd><p>Insert new dimensions to a matrix so as it has &lt;new shape&gt; shape.
The original dimensions are at dim_list dimensions</p>
<dl>
<dt>Input:</dt><dd><p>mx: The matrix with arbitrary dimensions.
new_shape: This will be the new shape
dim_list: This is a list of dimensions where mx is in the output</p>
<blockquote>
<div><p>matrix. len(dim_list) == mx.ndim</p>
</div></blockquote>
</dd>
</dl>
</dd></dl>

<dl class="py function">
<dt id="flap.tools.find_str_match">
<code class="sig-prename descclassname">flap.tools.</code><code class="sig-name descname">find_str_match</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">value</span></em>, <em class="sig-param"><span class="n">options</span></em><span class="sig-paren">)</span><a class="reference internal" href="_modules/flap/tools.xhtml#find_str_match"><span class="viewcode-link">[source]</span></a></dt>
<dd><p>Given value string and a list of possibilities in the list of strings option
find matches assuming value is an abbreviation. Return ValueError if no match
or multiple match is found.
If one match is found return the matching string</p>
</dd></dl>

<dl class="py function">
<dt id="flap.tools.flatten_multidim">
<code class="sig-prename descclassname">flap.tools.</code><code class="sig-name descname">flatten_multidim</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">mx</span></em>, <em class="sig-param"><span class="n">dim_list</span></em><span class="sig-paren">)</span><a class="reference internal" href="_modules/flap/tools.xhtml#flatten_multidim"><span class="viewcode-link">[source]</span></a></dt>
<dd><p>Flatten the dimensions in dim_list to dim_list[0]
Returns the modified matrix and a mapping from the original to the new dimension list.
The mapping will be None for the flattened dimension in dim_list even if
flattening was not done. The dimension numbers in the dimension list assume that
the flattened dimensions are removed.</p>
</dd></dl>

<dl class="py function">
<dt id="flap.tools.grid_to_box">
<code class="sig-prename descclassname">flap.tools.</code><code class="sig-name descname">grid_to_box</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">xdata</span></em>, <em class="sig-param"><span class="n">ydata</span></em><span class="sig-paren">)</span><a class="reference internal" href="_modules/flap/tools.xhtml#grid_to_box"><span class="viewcode-link">[source]</span></a></dt>
<dd><p>Given 2D x and y coordinate matrices create box coordinates around the points as
needed by matplotlib.pcolomesh.
xdata: X coordinates.
ydata: Y coordinates.
In both arrays x direction is along first dimension, y direction along second dimension.
Returns xbox, ybox.</p>
</dd></dl>

<dl class="py function">
<dt id="flap.tools.move_axes_to_end">
<code class="sig-prename descclassname">flap.tools.</code><code class="sig-name descname">move_axes_to_end</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">mx_orig</span></em>, <em class="sig-param"><span class="n">axes</span></em><span class="sig-paren">)</span><a class="reference internal" href="_modules/flap/tools.xhtml#move_axes_to_end"><span class="viewcode-link">[source]</span></a></dt>
<dd><p>Moves the listed axes to the end.</p>
</dd></dl>

<dl class="py function">
<dt id="flap.tools.move_axes_to_start">
<code class="sig-prename descclassname">flap.tools.</code><code class="sig-name descname">move_axes_to_start</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">mx_orig</span></em>, <em class="sig-param"><span class="n">axes</span></em><span class="sig-paren">)</span><a class="reference internal" href="_modules/flap/tools.xhtml#move_axes_to_start"><span class="viewcode-link">[source]</span></a></dt>
<dd><p>Moves the listed axes to the start axes.</p>
</dd></dl>

<dl class="py function">
<dt id="flap.tools.multiply_along_axes">
<code class="sig-prename descclassname">flap.tools.</code><code class="sig-name descname">multiply_along_axes</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">a1_orig</span></em>, <em class="sig-param"><span class="n">a2_orig</span></em>, <em class="sig-param"><span class="n">axes</span></em>, <em class="sig-param"><span class="n">keep_a1_dims</span><span class="o">=</span><span class="default_value">True</span></em><span class="sig-paren">)</span><a class="reference internal" href="_modules/flap/tools.xhtml#multiply_along_axes"><span class="viewcode-link">[source]</span></a></dt>
<dd><p>Multiplies two arrays along given axes.
INPUT:</p>
<blockquote>
<div><p>a1_orig: Array 1.
a2_orig: Array 2.
axes: List of two axis numbers or list of two lists of axis numbers
keep_1_dims: (bool)</p>
<blockquote>
<div><p>If True: The output array has dimensions of a1 followed by a2 with the common dims removed
If False: The output array has the a1 dimensions without common dims then the common dims</p>
<blockquote>
<div><p>followed by a2 with the common dims removed</p>
</div></blockquote>
</div></blockquote>
</div></blockquote>
<dl class="simple">
<dt>Return values:</dt><dd><dl class="simple">
<dt>a, axis_source, axis_number</dt><dd><p>a: An array with dimension number a1.dim+a2.dim-1.
axis_source: List of integers telling the source array for each output axis ( 0 or 1)
axis_number: Axis numbers in the arrays listed in axes_source</p>
</dd>
</dl>
</dd>
</dl>
</dd></dl>

<dl class="py function">
<dt id="flap.tools.select_signals">
<code class="sig-prename descclassname">flap.tools.</code><code class="sig-name descname">select_signals</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">signal_list</span></em>, <em class="sig-param"><span class="n">signal_spec</span></em><span class="sig-paren">)</span><a class="reference internal" href="_modules/flap/tools.xhtml#select_signals"><span class="viewcode-link">[source]</span></a></dt>
<dd><p>Selects signals from a signal list following signal specifications.</p>
<p>signal_list: List of strings of possible signal names</p>
<dl class="simple">
<dt>signal_spec: List of strings with signal specifications including wildcards</dt><dd><p>Normal Unix file name wildcards are accepted and extended with
[&lt;num&gt;-&lt;num&gt;] type expressions so as e.g. a channel range can be selected.</p>
</dd>
<dt>Returs select_list, select_index</dt><dd><p>select_list: List of strings with selected signal names
select_index: List of indices to signal list of the selected signals</p>
</dd>
</dl>
<p>Raises ValueError if there is no match for one specification</p>
</dd></dl>

<dl class="py function">
<dt id="flap.tools.submatrix_index">
<code class="sig-prename descclassname">flap.tools.</code><code class="sig-name descname">submatrix_index</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">mx_shape</span></em>, <em class="sig-param"><span class="n">index</span></em><span class="sig-paren">)</span><a class="reference internal" href="_modules/flap/tools.xhtml#submatrix_index"><span class="viewcode-link">[source]</span></a></dt>
<dd><dl>
<dt>Given an arbitrary dimension matrix with shape mx_shape the tuple to</dt><dd><p>extract a submatrix is created and returned.
The elements in each dimension are selected by index.</p>
</dd>
<dt>Input:</dt><dd><p>mx_shape: Shape of the matrix
index: Tuple or list of 1D numpy arrays. The length should be equal to the
length of mx_shape. Each array contains the indices for the</p>
<blockquote>
<div><p>corresponding dimension.</p>
</div></blockquote>
</dd>
<dt>Return value:</dt><dd><p>A tuple of index matrices. Each index matrix has the same shape as
described by index. Each matrix contains the indices for one dimension
of the matrix. This tuple can be directly used for indexing the matrix.</p>
</dd>
</dl>
</dd></dl>

<dl class="py function">
<dt id="flap.tools.unify_list">
<code class="sig-prename descclassname">flap.tools.</code><code class="sig-name descname">unify_list</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">list1</span></em>, <em class="sig-param"><span class="n">list2</span></em><span class="sig-paren">)</span><a class="reference internal" href="_modules/flap/tools.xhtml#unify_list"><span class="viewcode-link">[source]</span></a></dt>
<dd><p>Returns list with elements present in any of the two lists.
Output list is sorted.</p>
</dd></dl>

</div>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>